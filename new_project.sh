#!/bin/bash

# This bash script instantiates the directory structure and important files
# for a new project, substituting project-specific information as appropriate.
# It also initializes a git repository in the new directory, and commits the 
# files generated by this process.
#
# NOTE: Under construction

# Defaults etc.
# First commit message
commit="Initial project structure (github.com/BlohmLab/project-template)"
# Projects directory
devdef="~/dev"
# License
licdef="?"

# Location of this script
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# Projects directory
read -n 1 -p "Projects directory (~/dev): " dev || dev=$devdef;

# Name of the new project
read -n 1 -p "Project name: " name;

# Create and enter the project directory
prjdir="$dev/$name"
mkdir -p "$prjdir/"
cd "$prjdir"

# Create project package and top-level files
touch "README.md"
mkdir "$name/"
touch "$name/__init__.py"
# TODO: ask user for dependencies?
cp "$DIR/requirements.txt" requirements.txt
cp "$DIR/makefile" makefile

# Copy the template setup.py and fill in the blanks
cp "$DIR/setup.py" "$prjdir"
sed -i 's/NAME/$name/g' setup.py
sed -i 's/LIC/$lic/g' setup.py

# License (what should be default? + should give a list to user)
read -n 1 -p "License (?): " lic || lic=$licdef;
cp "$DIR/template/licenses/$lic.txt" "$prjdir/LICENSE"

# Initialize git repository in new project directory
# Stage and commit the newly generated components
git init
cp "$DIR/template/.gitignore" "$prjdir"
git add "*"
git commit -m "$commit"
